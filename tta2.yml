---
- name: Three tier app
  hosts: all
  gather_facts: false # remove later! speeds up testing
  become: true

- name: Deploy tomcat
  hosts: apps
  gather_facts: false
  become: true
  tasks:

  - name: Install tomcat
    package:
      name: tomcat
      state: latest
  - name: Enable tomcat at boot
    service:
      name: tomcat
      enabled: yes

  - name: Create ansible tomcat directory
    file:
      path: /usr/share/tomcat/webapps/ansible
      state: directory

  - name: Copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: ./tta-files/index.html.j2
      dest: /usr/share/tomcat/webapps/ansible/index.html
      mode: 0644

  - name: Start tomcat
    service:
      name: tomcat
      state: started



- name: Set Index.html on app 1
  hosts: app1
  gather_facts: false
  become: true
  tasks:
  
  - name: Copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: ./tta-files/index.html.app1
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: Set Index.html on app 2
  hosts: app2
  gather_facts: false
  become: true
  tasks:
  
  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: ./tta-files/index.html.app2
      dest: /usr/share/tomcat/webapps/ansible/index.html


- name: Deploy postgres
  gather_facts: false
  become: true
  hosts: appdbs
  tasks:
  
  - name: Install Postgresql-server
    package:
      name: postgresql-server
      state: latest
      
  - name: Enable postgresql at boot
    service:
      name: postgresql
      enabled: yes
#  - name: tell user to finish setting up postgres
#    debug:
#      msg: "Either uncomment the postgres setup or manually login and initialize"
# only run the next 2 tasks once!
  - name: Initilize postgres
    command: postgresql-setup initdb
    
  - name: start postgres
    service:
      name: postgresql.service
      state: started
 
  - name: Firewall Config
#    systemd: 
#      name: firewalld
#      state: started
      
    firewalld:
      port: 8080/tcp
      permanent: true
      state: enabled
       
...
